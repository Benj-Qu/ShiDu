#!/bin/bash
set -Eeuo pipefail
set -x

usage() {
    echo "Usage: $0 (start|stop|restart|status)"
}
if [ $# -ne 1 ]; then
    usage
    exit 1
fi

start() {
    set +o pipefail
    NPROCSINDEX=$(pgrep -f "flask --app index run --host 0.0.0.0 --port 900[0-2]" | wc -l)
    NPROCSSEARCH=$(pgrep -f "flask --app search run --host 0.0.0.0 --port 8000" | wc -l)
    set -o pipefail
    if [[ ! -f var/search.sqlite3 ]]; then
        echo "Error: can't find search database var/search.sqlite3"
        echo "Try: ./bin/searchdb create"
        exit 1
    elif [ "$NPROCSINDEX" -eq 0 ]; then
        echo "Error: index server is not running"
        echo "Try ./bin/index start"
        exit 2
    elif [ "$NPROCSSEARCH" -gt 0 ]; then
        echo "Error: search server is already running"
        exit 3
    else
        echo "starting search server ..."
        mkdir -p var/log
        rm -f var/log/search.log
        flask --app search run --host 0.0.0.0 --port 8000 &> var/log/search.log &
    fi
}

stop() {
    echo "stopping search server ..."
    set +o pipefail
    NPROCS=$(pgrep -f "flask --app search run --host 0.0.0.0 --port 8000"| wc -l)
    set -o pipefail
    if [ "$NPROCS" -gt 0 ]; then
        pkill -f 'flask --app search run --host 0.0.0.0 --port 8000' || true
    fi
}

status() {
    set +o pipefail
    NPROCS=$(pgrep -f "flask --app search run --host 0.0.0.0 --port 8000" | wc -l)
    set -o pipefail
    if [ "$NPROCS" -gt 0 ]; then
        echo "search server running"
        exit
    else
        echo "search server stopped"
        exit 1
    fi
}

case $1 in
    "start")
        start
        ;;
    "stop")
        stop
        ;;
    "restart")
        stop
        start
        ;;
    "status")
        status
        ;;
    *)
        usage
        exit 1
        ;;
esac
